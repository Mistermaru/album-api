name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Album-Api

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Build the Docker image
      run: docker build --tag album:${{github.run_number}} --file Dockerfile .
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
    - name: Login to Amazon ECR  
      uses: aws-actions/amazon-ecr-login@v1
      id: login-ecr
    - name: Tag Docker image for ECR
      run: docker image tag album:${{github.run_number}} 406617925703.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:${{github.run_number}}
    - name: Push Docker image to ECR
      run: docker push 406617925703.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:${{github.run_number}}
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: AlbumContainer
        image: 406617925703.dkr.ecr.us-east-1.amazonaws.com/cnsd/album:${{github.run_number}}
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: AlbumServiceBlueGreen
        cluster: AlbumCluster
        wait-for-service-stability: true    
        
